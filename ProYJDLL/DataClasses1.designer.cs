#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProYJDLL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PatentQuery_ZJPT")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertZtDbList(ZtDbList instance);
    partial void UpdateZtDbList(ZtDbList instance);
    partial void DeleteZtDbList(ZtDbList instance);
    partial void InsertTLC_Albums(TLC_Albums instance);
    partial void UpdateTLC_Albums(TLC_Albums instance);
    partial void DeleteTLC_Albums(TLC_Albums instance);
    partial void InsertsysTree(sysTree instance);
    partial void UpdatesysTree(sysTree instance);
    partial void DeletesysTree(sysTree instance);
    partial void Insertcity(city instance);
    partial void Updatecity(city instance);
    partial void Deletecity(city instance);
    partial void Insertprovincial(provincial instance);
    partial void Updateprovincial(provincial instance);
    partial void Deleteprovincial(provincial instance);
    partial void InsertCountryConfig(CountryConfig instance);
    partial void UpdateCountryConfig(CountryConfig instance);
    partial void DeleteCountryConfig(CountryConfig instance);
    partial void InsertC_W_SEARCHLIS(C_W_SEARCHLIS instance);
    partial void UpdateC_W_SEARCHLIS(C_W_SEARCHLIS instance);
    partial void DeleteC_W_SEARCHLIS(C_W_SEARCHLIS instance);
    partial void InsertApplicantYJ(ApplicantYJ instance);
    partial void UpdateApplicantYJ(ApplicantYJ instance);
    partial void DeleteApplicantYJ(ApplicantYJ instance);
    partial void InsertInventorYJ(InventorYJ instance);
    partial void UpdateInventorYJ(InventorYJ instance);
    partial void DeleteInventorYJ(InventorYJ instance);
    partial void InsertTbShiJie(TbShiJie instance);
    partial void UpdateTbShiJie(TbShiJie instance);
    partial void DeleteTbShiJie(TbShiJie instance);
    partial void InsertC_EARLY_WARNING(C_EARLY_WARNING instance);
    partial void UpdateC_EARLY_WARNING(C_EARLY_WARNING instance);
    partial void DeleteC_EARLY_WARNING(C_EARLY_WARNING instance);
    partial void InsertC_W_SECARCH(C_W_SECARCH instance);
    partial void UpdateC_W_SECARCH(C_W_SECARCH instance);
    partial void DeleteC_W_SECARCH(C_W_SECARCH instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::ProYJDLL.Properties.Settings.Default.PatentQuery_ZJPTConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ZtDbList> ZtDbList
		{
			get
			{
				return this.GetTable<ZtDbList>();
			}
		}
		
		public System.Data.Linq.Table<TLC_Albums> TLC_Albums
		{
			get
			{
				return this.GetTable<TLC_Albums>();
			}
		}
		
		public System.Data.Linq.Table<sysTree> sysTree
		{
			get
			{
				return this.GetTable<sysTree>();
			}
		}
		
		public System.Data.Linq.Table<city> city
		{
			get
			{
				return this.GetTable<city>();
			}
		}
		
		public System.Data.Linq.Table<Applicant> Applicant
		{
			get
			{
				return this.GetTable<Applicant>();
			}
		}
		
		public System.Data.Linq.Table<Inventor> Inventor
		{
			get
			{
				return this.GetTable<Inventor>();
			}
		}
		
		public System.Data.Linq.Table<provincial> provincial
		{
			get
			{
				return this.GetTable<provincial>();
			}
		}
		
		public System.Data.Linq.Table<CountryConfig> CountryConfig
		{
			get
			{
				return this.GetTable<CountryConfig>();
			}
		}
		
		public System.Data.Linq.Table<C_W_SEARCHLIS> C_W_SEARCHLIS
		{
			get
			{
				return this.GetTable<C_W_SEARCHLIS>();
			}
		}
		
		public System.Data.Linq.Table<ApplicantYJ> ApplicantYJ
		{
			get
			{
				return this.GetTable<ApplicantYJ>();
			}
		}
		
		public System.Data.Linq.Table<InventorYJ> InventorYJ
		{
			get
			{
				return this.GetTable<InventorYJ>();
			}
		}
		
		public System.Data.Linq.Table<TbShiJie> TbShiJie
		{
			get
			{
				return this.GetTable<TbShiJie>();
			}
		}
		
		public System.Data.Linq.Table<C_EARLY_WARNING> C_EARLY_WARNING
		{
			get
			{
				return this.GetTable<C_EARLY_WARNING>();
			}
		}
		
		public System.Data.Linq.Table<C_W_SECARCH> C_W_SECARCH
		{
			get
			{
				return this.GetTable<C_W_SECARCH>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZtDbList")]
	public partial class ZtDbList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DbID;
		
		private string _ztDbName;
		
		private System.Nullable<int> _dbType;
		
		private System.Nullable<int> _CreateUserId;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
		private string _DbDes;
		
		private System.Nullable<bool> _IsDel;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDbIDChanging(int value);
    partial void OnDbIDChanged();
    partial void OnztDbNameChanging(string value);
    partial void OnztDbNameChanged();
    partial void OndbTypeChanging(System.Nullable<int> value);
    partial void OndbTypeChanged();
    partial void OnCreateUserIdChanging(System.Nullable<int> value);
    partial void OnCreateUserIdChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    partial void OnDbDesChanging(string value);
    partial void OnDbDesChanged();
    partial void OnIsDelChanging(System.Nullable<bool> value);
    partial void OnIsDelChanged();
    #endregion
		
		public ZtDbList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DbID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DbID
		{
			get
			{
				return this._DbID;
			}
			set
			{
				if ((this._DbID != value))
				{
					this.OnDbIDChanging(value);
					this.SendPropertyChanging();
					this._DbID = value;
					this.SendPropertyChanged("DbID");
					this.OnDbIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ztDbName", DbType="NVarChar(20)")]
		public string ztDbName
		{
			get
			{
				return this._ztDbName;
			}
			set
			{
				if ((this._ztDbName != value))
				{
					this.OnztDbNameChanging(value);
					this.SendPropertyChanging();
					this._ztDbName = value;
					this.SendPropertyChanged("ztDbName");
					this.OnztDbNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dbType", DbType="Int")]
		public System.Nullable<int> dbType
		{
			get
			{
				return this._dbType;
			}
			set
			{
				if ((this._dbType != value))
				{
					this.OndbTypeChanging(value);
					this.SendPropertyChanging();
					this._dbType = value;
					this.SendPropertyChanged("dbType");
					this.OndbTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateUserId", DbType="Int")]
		public System.Nullable<int> CreateUserId
		{
			get
			{
				return this._CreateUserId;
			}
			set
			{
				if ((this._CreateUserId != value))
				{
					this.OnCreateUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreateUserId = value;
					this.SendPropertyChanged("CreateUserId");
					this.OnCreateUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DbDes", DbType="VarChar(500)")]
		public string DbDes
		{
			get
			{
				return this._DbDes;
			}
			set
			{
				if ((this._DbDes != value))
				{
					this.OnDbDesChanging(value);
					this.SendPropertyChanging();
					this._DbDes = value;
					this.SendPropertyChanged("DbDes");
					this.OnDbDesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDel", DbType="Bit")]
		public System.Nullable<bool> IsDel
		{
			get
			{
				return this._IsDel;
			}
			set
			{
				if ((this._IsDel != value))
				{
					this.OnIsDelChanging(value);
					this.SendPropertyChanging();
					this._IsDel = value;
					this.SendPropertyChanged("IsDel");
					this.OnIsDelChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TLC_Albums")]
	public partial class TLC_Albums : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AlbumId;
		
		private int _UserId;
		
		private int _ParentId;
		
		private string _Title;
		
		private string _Note;
		
		private int _Collects;
		
		private int _Orders;
		
		private System.Nullable<byte> _live;
		
		private System.Nullable<bool> _isdel;
		
		private System.Nullable<byte> _IsParent;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlbumIdChanging(int value);
    partial void OnAlbumIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnParentIdChanging(int value);
    partial void OnParentIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnCollectsChanging(int value);
    partial void OnCollectsChanged();
    partial void OnOrdersChanging(int value);
    partial void OnOrdersChanged();
    partial void OnliveChanging(System.Nullable<byte> value);
    partial void OnliveChanged();
    partial void OnisdelChanging(System.Nullable<bool> value);
    partial void OnisdelChanged();
    partial void OnIsParentChanging(System.Nullable<byte> value);
    partial void OnIsParentChanged();
    #endregion
		
		public TLC_Albums()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AlbumId
		{
			get
			{
				return this._AlbumId;
			}
			set
			{
				if ((this._AlbumId != value))
				{
					this.OnAlbumIdChanging(value);
					this.SendPropertyChanging();
					this._AlbumId = value;
					this.SendPropertyChanged("AlbumId");
					this.OnAlbumIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="Int NOT NULL")]
		public int ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this.OnParentIdChanging(value);
					this.SendPropertyChanging();
					this._ParentId = value;
					this.SendPropertyChanged("ParentId");
					this.OnParentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(100)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(255)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collects", DbType="Int NOT NULL")]
		public int Collects
		{
			get
			{
				return this._Collects;
			}
			set
			{
				if ((this._Collects != value))
				{
					this.OnCollectsChanging(value);
					this.SendPropertyChanging();
					this._Collects = value;
					this.SendPropertyChanged("Collects");
					this.OnCollectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orders", DbType="Int NOT NULL")]
		public int Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				if ((this._Orders != value))
				{
					this.OnOrdersChanging(value);
					this.SendPropertyChanging();
					this._Orders = value;
					this.SendPropertyChanged("Orders");
					this.OnOrdersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_live", DbType="TinyInt")]
		public System.Nullable<byte> live
		{
			get
			{
				return this._live;
			}
			set
			{
				if ((this._live != value))
				{
					this.OnliveChanging(value);
					this.SendPropertyChanging();
					this._live = value;
					this.SendPropertyChanged("live");
					this.OnliveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isdel", DbType="Bit")]
		public System.Nullable<bool> isdel
		{
			get
			{
				return this._isdel;
			}
			set
			{
				if ((this._isdel != value))
				{
					this.OnisdelChanging(value);
					this.SendPropertyChanging();
					this._isdel = value;
					this.SendPropertyChanged("isdel");
					this.OnisdelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsParent", DbType="TinyInt")]
		public System.Nullable<byte> IsParent
		{
			get
			{
				return this._IsParent;
			}
			set
			{
				if ((this._IsParent != value))
				{
					this.OnIsParentChanging(value);
					this.SendPropertyChanging();
					this._IsParent = value;
					this.SendPropertyChanged("IsParent");
					this.OnIsParentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sysTree")]
	public partial class sysTree : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NodeId;
		
		private string _NodeName;
		
		private System.Nullable<int> _PNodeid;
		
		private System.Nullable<bool> _IsParent;
		
		private string _type;
		
		private System.Nullable<bool> _isdel;
		
		private string _des;
		
		private System.Nullable<byte> _live;
		
		private string _NodeName1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNodeIdChanging(int value);
    partial void OnNodeIdChanged();
    partial void OnNodeNameChanging(string value);
    partial void OnNodeNameChanged();
    partial void OnPNodeidChanging(System.Nullable<int> value);
    partial void OnPNodeidChanged();
    partial void OnIsParentChanging(System.Nullable<bool> value);
    partial void OnIsParentChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnisdelChanging(System.Nullable<bool> value);
    partial void OnisdelChanged();
    partial void OndesChanging(string value);
    partial void OndesChanged();
    partial void OnliveChanging(System.Nullable<byte> value);
    partial void OnliveChanged();
    partial void OnNodeName1Changing(string value);
    partial void OnNodeName1Changed();
    #endregion
		
		public sysTree()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NodeId
		{
			get
			{
				return this._NodeId;
			}
			set
			{
				if ((this._NodeId != value))
				{
					this.OnNodeIdChanging(value);
					this.SendPropertyChanging();
					this._NodeId = value;
					this.SendPropertyChanged("NodeId");
					this.OnNodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeName", DbType="NVarChar(450)")]
		public string NodeName
		{
			get
			{
				return this._NodeName;
			}
			set
			{
				if ((this._NodeName != value))
				{
					this.OnNodeNameChanging(value);
					this.SendPropertyChanging();
					this._NodeName = value;
					this.SendPropertyChanged("NodeName");
					this.OnNodeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNodeid", DbType="Int")]
		public System.Nullable<int> PNodeid
		{
			get
			{
				return this._PNodeid;
			}
			set
			{
				if ((this._PNodeid != value))
				{
					this.OnPNodeidChanging(value);
					this.SendPropertyChanging();
					this._PNodeid = value;
					this.SendPropertyChanged("PNodeid");
					this.OnPNodeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsParent", DbType="Bit")]
		public System.Nullable<bool> IsParent
		{
			get
			{
				return this._IsParent;
			}
			set
			{
				if ((this._IsParent != value))
				{
					this.OnIsParentChanging(value);
					this.SendPropertyChanging();
					this._IsParent = value;
					this.SendPropertyChanged("IsParent");
					this.OnIsParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(10)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isdel", DbType="Bit")]
		public System.Nullable<bool> isdel
		{
			get
			{
				return this._isdel;
			}
			set
			{
				if ((this._isdel != value))
				{
					this.OnisdelChanging(value);
					this.SendPropertyChanging();
					this._isdel = value;
					this.SendPropertyChanged("isdel");
					this.OnisdelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_des", DbType="VarChar(400)")]
		public string des
		{
			get
			{
				return this._des;
			}
			set
			{
				if ((this._des != value))
				{
					this.OndesChanging(value);
					this.SendPropertyChanging();
					this._des = value;
					this.SendPropertyChanged("des");
					this.OndesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_live", DbType="TinyInt")]
		public System.Nullable<byte> live
		{
			get
			{
				return this._live;
			}
			set
			{
				if ((this._live != value))
				{
					this.OnliveChanging(value);
					this.SendPropertyChanging();
					this._live = value;
					this.SendPropertyChanged("live");
					this.OnliveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeName1", DbType="NVarChar(800)")]
		public string NodeName1
		{
			get
			{
				return this._NodeName1;
			}
			set
			{
				if ((this._NodeName1 != value))
				{
					this.OnNodeName1Changing(value);
					this.SendPropertyChanging();
					this._NodeName1 = value;
					this.SendPropertyChanged("NodeName1");
					this.OnNodeName1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.city")]
	public partial class city : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cityID;
		
		private string _cityName;
		
		private int _provincialID;
		
		private string _PY;
		
		private EntityRef<provincial> _provincial;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncityIDChanging(int value);
    partial void OncityIDChanged();
    partial void OncityNameChanging(string value);
    partial void OncityNameChanged();
    partial void OnprovincialIDChanging(int value);
    partial void OnprovincialIDChanged();
    partial void OnPYChanging(string value);
    partial void OnPYChanged();
    #endregion
		
		public city()
		{
			this._provincial = default(EntityRef<provincial>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int cityID
		{
			get
			{
				return this._cityID;
			}
			set
			{
				if ((this._cityID != value))
				{
					this.OncityIDChanging(value);
					this.SendPropertyChanging();
					this._cityID = value;
					this.SendPropertyChanged("cityID");
					this.OncityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cityName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string cityName
		{
			get
			{
				return this._cityName;
			}
			set
			{
				if ((this._cityName != value))
				{
					this.OncityNameChanging(value);
					this.SendPropertyChanging();
					this._cityName = value;
					this.SendPropertyChanged("cityName");
					this.OncityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_provincialID", DbType="Int NOT NULL")]
		public int provincialID
		{
			get
			{
				return this._provincialID;
			}
			set
			{
				if ((this._provincialID != value))
				{
					if (this._provincial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprovincialIDChanging(value);
					this.SendPropertyChanging();
					this._provincialID = value;
					this.SendPropertyChanged("provincialID");
					this.OnprovincialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PY", DbType="VarChar(100)")]
		public string PY
		{
			get
			{
				return this._PY;
			}
			set
			{
				if ((this._PY != value))
				{
					this.OnPYChanging(value);
					this.SendPropertyChanging();
					this._PY = value;
					this.SendPropertyChanged("PY");
					this.OnPYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="provincial_city", Storage="_provincial", ThisKey="provincialID", OtherKey="provincialID", IsForeignKey=true)]
		public provincial provincial
		{
			get
			{
				return this._provincial.Entity;
			}
			set
			{
				provincial previousValue = this._provincial.Entity;
				if (((previousValue != value) 
							|| (this._provincial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._provincial.Entity = null;
						previousValue.city.Remove(this);
					}
					this._provincial.Entity = value;
					if ((value != null))
					{
						value.city.Add(this);
						this._provincialID = value.provincialID;
					}
					else
					{
						this._provincialID = default(int);
					}
					this.SendPropertyChanged("provincial");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Applicant")]
	public partial class Applicant
	{
		
		private string _pubno;
		
		private System.Nullable<char> _pubtype;
		
		private string _pubvol;
		
		private string _filingno;
		
		private string _appl;
		
		private string _mark;
		
		private System.Nullable<bool> _pubmk;
		
		public Applicant()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pubno", DbType="Char(14)")]
		public string pubno
		{
			get
			{
				return this._pubno;
			}
			set
			{
				if ((this._pubno != value))
				{
					this._pubno = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pubtype", DbType="Char(1)")]
		public System.Nullable<char> pubtype
		{
			get
			{
				return this._pubtype;
			}
			set
			{
				if ((this._pubtype != value))
				{
					this._pubtype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pubvol", DbType="Char(8)")]
		public string pubvol
		{
			get
			{
				return this._pubvol;
			}
			set
			{
				if ((this._pubvol != value))
				{
					this._pubvol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filingno", DbType="Char(12)")]
		public string filingno
		{
			get
			{
				return this._filingno;
			}
			set
			{
				if ((this._filingno != value))
				{
					this._filingno = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appl", DbType="Char(200)")]
		public string appl
		{
			get
			{
				return this._appl;
			}
			set
			{
				if ((this._appl != value))
				{
					this._appl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mark", DbType="Char(10)")]
		public string mark
		{
			get
			{
				return this._mark;
			}
			set
			{
				if ((this._mark != value))
				{
					this._mark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pubmk", DbType="Bit")]
		public System.Nullable<bool> pubmk
		{
			get
			{
				return this._pubmk;
			}
			set
			{
				if ((this._pubmk != value))
				{
					this._pubmk = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventor")]
	public partial class Inventor
	{
		
		private string _pubno;
		
		private System.Nullable<char> _pubtype;
		
		private string _pubvol;
		
		private string _filingno;
		
		private string _inventor1;
		
		private string _mark;
		
		private System.Nullable<bool> _pubmk;
		
		public Inventor()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pubno", DbType="Char(14)")]
		public string pubno
		{
			get
			{
				return this._pubno;
			}
			set
			{
				if ((this._pubno != value))
				{
					this._pubno = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pubtype", DbType="Char(1)")]
		public System.Nullable<char> pubtype
		{
			get
			{
				return this._pubtype;
			}
			set
			{
				if ((this._pubtype != value))
				{
					this._pubtype = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pubvol", DbType="Char(8)")]
		public string pubvol
		{
			get
			{
				return this._pubvol;
			}
			set
			{
				if ((this._pubvol != value))
				{
					this._pubvol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filingno", DbType="Char(12)")]
		public string filingno
		{
			get
			{
				return this._filingno;
			}
			set
			{
				if ((this._filingno != value))
				{
					this._filingno = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="inventor", Storage="_inventor1", DbType="Char(200)")]
		public string inventor1
		{
			get
			{
				return this._inventor1;
			}
			set
			{
				if ((this._inventor1 != value))
				{
					this._inventor1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mark", DbType="Char(10)")]
		public string mark
		{
			get
			{
				return this._mark;
			}
			set
			{
				if ((this._mark != value))
				{
					this._mark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pubmk", DbType="Bit")]
		public System.Nullable<bool> pubmk
		{
			get
			{
				return this._pubmk;
			}
			set
			{
				if ((this._pubmk != value))
				{
					this._pubmk = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.provincial")]
	public partial class provincial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _provincialID;
		
		private string _provincialName;
		
		private string _PY;
		
		private string _DaiMa;
		
		private EntitySet<city> _city;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprovincialIDChanging(int value);
    partial void OnprovincialIDChanged();
    partial void OnprovincialNameChanging(string value);
    partial void OnprovincialNameChanged();
    partial void OnPYChanging(string value);
    partial void OnPYChanged();
    partial void OnDaiMaChanging(string value);
    partial void OnDaiMaChanged();
    #endregion
		
		public provincial()
		{
			this._city = new EntitySet<city>(new Action<city>(this.attach_city), new Action<city>(this.detach_city));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_provincialID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int provincialID
		{
			get
			{
				return this._provincialID;
			}
			set
			{
				if ((this._provincialID != value))
				{
					this.OnprovincialIDChanging(value);
					this.SendPropertyChanging();
					this._provincialID = value;
					this.SendPropertyChanged("provincialID");
					this.OnprovincialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_provincialName", DbType="VarChar(50)")]
		public string provincialName
		{
			get
			{
				return this._provincialName;
			}
			set
			{
				if ((this._provincialName != value))
				{
					this.OnprovincialNameChanging(value);
					this.SendPropertyChanging();
					this._provincialName = value;
					this.SendPropertyChanged("provincialName");
					this.OnprovincialNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PY", DbType="VarChar(100)")]
		public string PY
		{
			get
			{
				return this._PY;
			}
			set
			{
				if ((this._PY != value))
				{
					this.OnPYChanging(value);
					this.SendPropertyChanging();
					this._PY = value;
					this.SendPropertyChanged("PY");
					this.OnPYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaiMa", DbType="NVarChar(255)")]
		public string DaiMa
		{
			get
			{
				return this._DaiMa;
			}
			set
			{
				if ((this._DaiMa != value))
				{
					this.OnDaiMaChanging(value);
					this.SendPropertyChanging();
					this._DaiMa = value;
					this.SendPropertyChanged("DaiMa");
					this.OnDaiMaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="provincial_city", Storage="_city", ThisKey="provincialID", OtherKey="provincialID")]
		public EntitySet<city> city
		{
			get
			{
				return this._city;
			}
			set
			{
				this._city.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_city(city entity)
		{
			this.SendPropertyChanging();
			entity.provincial = this;
		}
		
		private void detach_city(city entity)
		{
			this.SendPropertyChanging();
			entity.provincial = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CountryConfig")]
	public partial class CountryConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private double _id;
		
		private string _DaiMa;
		
		private string _MingCheng;
		
		private System.Nullable<double> _leixing;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(double value);
    partial void OnidChanged();
    partial void OnDaiMaChanging(string value);
    partial void OnDaiMaChanged();
    partial void OnMingChengChanging(string value);
    partial void OnMingChengChanged();
    partial void OnleixingChanging(System.Nullable<double> value);
    partial void OnleixingChanged();
    #endregion
		
		public CountryConfig()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Float NOT NULL", IsPrimaryKey=true)]
		public double id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaiMa", DbType="NVarChar(255)")]
		public string DaiMa
		{
			get
			{
				return this._DaiMa;
			}
			set
			{
				if ((this._DaiMa != value))
				{
					this.OnDaiMaChanging(value);
					this.SendPropertyChanging();
					this._DaiMa = value;
					this.SendPropertyChanged("DaiMa");
					this.OnDaiMaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MingCheng", DbType="NVarChar(100)")]
		public string MingCheng
		{
			get
			{
				return this._MingCheng;
			}
			set
			{
				if ((this._MingCheng != value))
				{
					this.OnMingChengChanging(value);
					this.SendPropertyChanging();
					this._MingCheng = value;
					this.SendPropertyChanged("MingCheng");
					this.OnMingChengChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_leixing", DbType="Float")]
		public System.Nullable<double> leixing
		{
			get
			{
				return this._leixing;
			}
			set
			{
				if ((this._leixing != value))
				{
					this.OnleixingChanging(value);
					this.SendPropertyChanging();
					this._leixing = value;
					this.SendPropertyChanged("leixing");
					this.OnleixingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.C_W_SEARCHLIS")]
	public partial class C_W_SEARCHLIS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _W_ID;
		
		private System.Nullable<int> _C_ID;
		
		private string _S_NAME;
		
		private System.Nullable<System.DateTime> _CHANGEDATE;
		
		private System.Nullable<int> _CURRENTNUM;
		
		private System.Nullable<int> _CHANGENUM;
		
		private System.Data.Linq.Binary _SEARCHFILE;
		
		private System.Data.Linq.Binary _COMPAREFILE;
		
		private System.Nullable<int> _type;
		
		private System.Nullable<int> _HisOrder;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnW_IDChanging(System.Nullable<int> value);
    partial void OnW_IDChanged();
    partial void OnC_IDChanging(System.Nullable<int> value);
    partial void OnC_IDChanged();
    partial void OnS_NAMEChanging(string value);
    partial void OnS_NAMEChanged();
    partial void OnCHANGEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCHANGEDATEChanged();
    partial void OnCURRENTNUMChanging(System.Nullable<int> value);
    partial void OnCURRENTNUMChanged();
    partial void OnCHANGENUMChanging(System.Nullable<int> value);
    partial void OnCHANGENUMChanged();
    partial void OnSEARCHFILEChanging(System.Data.Linq.Binary value);
    partial void OnSEARCHFILEChanged();
    partial void OnCOMPAREFILEChanging(System.Data.Linq.Binary value);
    partial void OnCOMPAREFILEChanged();
    partial void OntypeChanging(System.Nullable<int> value);
    partial void OntypeChanged();
    partial void OnHisOrderChanging(System.Nullable<int> value);
    partial void OnHisOrderChanged();
    #endregion
		
		public C_W_SEARCHLIS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_W_ID", DbType="Int")]
		public System.Nullable<int> W_ID
		{
			get
			{
				return this._W_ID;
			}
			set
			{
				if ((this._W_ID != value))
				{
					this.OnW_IDChanging(value);
					this.SendPropertyChanging();
					this._W_ID = value;
					this.SendPropertyChanged("W_ID");
					this.OnW_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_ID", DbType="Int")]
		public System.Nullable<int> C_ID
		{
			get
			{
				return this._C_ID;
			}
			set
			{
				if ((this._C_ID != value))
				{
					this.OnC_IDChanging(value);
					this.SendPropertyChanging();
					this._C_ID = value;
					this.SendPropertyChanged("C_ID");
					this.OnC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_NAME", DbType="VarChar(200)")]
		public string S_NAME
		{
			get
			{
				return this._S_NAME;
			}
			set
			{
				if ((this._S_NAME != value))
				{
					this.OnS_NAMEChanging(value);
					this.SendPropertyChanging();
					this._S_NAME = value;
					this.SendPropertyChanged("S_NAME");
					this.OnS_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHANGEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> CHANGEDATE
		{
			get
			{
				return this._CHANGEDATE;
			}
			set
			{
				if ((this._CHANGEDATE != value))
				{
					this.OnCHANGEDATEChanging(value);
					this.SendPropertyChanging();
					this._CHANGEDATE = value;
					this.SendPropertyChanged("CHANGEDATE");
					this.OnCHANGEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURRENTNUM", DbType="Int")]
		public System.Nullable<int> CURRENTNUM
		{
			get
			{
				return this._CURRENTNUM;
			}
			set
			{
				if ((this._CURRENTNUM != value))
				{
					this.OnCURRENTNUMChanging(value);
					this.SendPropertyChanging();
					this._CURRENTNUM = value;
					this.SendPropertyChanged("CURRENTNUM");
					this.OnCURRENTNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHANGENUM", DbType="Int")]
		public System.Nullable<int> CHANGENUM
		{
			get
			{
				return this._CHANGENUM;
			}
			set
			{
				if ((this._CHANGENUM != value))
				{
					this.OnCHANGENUMChanging(value);
					this.SendPropertyChanging();
					this._CHANGENUM = value;
					this.SendPropertyChanged("CHANGENUM");
					this.OnCHANGENUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEARCHFILE", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary SEARCHFILE
		{
			get
			{
				return this._SEARCHFILE;
			}
			set
			{
				if ((this._SEARCHFILE != value))
				{
					this.OnSEARCHFILEChanging(value);
					this.SendPropertyChanging();
					this._SEARCHFILE = value;
					this.SendPropertyChanged("SEARCHFILE");
					this.OnSEARCHFILEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPAREFILE", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary COMPAREFILE
		{
			get
			{
				return this._COMPAREFILE;
			}
			set
			{
				if ((this._COMPAREFILE != value))
				{
					this.OnCOMPAREFILEChanging(value);
					this.SendPropertyChanging();
					this._COMPAREFILE = value;
					this.SendPropertyChanged("COMPAREFILE");
					this.OnCOMPAREFILEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int")]
		public System.Nullable<int> type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HisOrder", DbType="Int")]
		public System.Nullable<int> HisOrder
		{
			get
			{
				return this._HisOrder;
			}
			set
			{
				if ((this._HisOrder != value))
				{
					this.OnHisOrderChanging(value);
					this.SendPropertyChanging();
					this._HisOrder = value;
					this.SendPropertyChanged("HisOrder");
					this.OnHisOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicantYJ")]
	public partial class ApplicantYJ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _appl;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnapplChanging(string value);
    partial void OnapplChanged();
    #endregion
		
		public ApplicantYJ()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_appl", DbType="VarChar(200)")]
		public string appl
		{
			get
			{
				return this._appl;
			}
			set
			{
				if ((this._appl != value))
				{
					this.OnapplChanging(value);
					this.SendPropertyChanging();
					this._appl = value;
					this.SendPropertyChanged("appl");
					this.OnapplChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InventorYJ")]
	public partial class InventorYJ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _inventor;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OninventorChanging(string value);
    partial void OninventorChanged();
    #endregion
		
		public InventorYJ()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inventor", DbType="VarChar(200)")]
		public string inventor
		{
			get
			{
				return this._inventor;
			}
			set
			{
				if ((this._inventor != value))
				{
					this.OninventorChanging(value);
					this.SendPropertyChanging();
					this._inventor = value;
					this.SendPropertyChanged("inventor");
					this.OninventorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TbShiJie")]
	public partial class TbShiJie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DaiMa;
		
		private string _MingCheng;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDaiMaChanging(string value);
    partial void OnDaiMaChanged();
    partial void OnMingChengChanging(string value);
    partial void OnMingChengChanged();
    #endregion
		
		public TbShiJie()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaiMa", DbType="NVarChar(2)")]
		public string DaiMa
		{
			get
			{
				return this._DaiMa;
			}
			set
			{
				if ((this._DaiMa != value))
				{
					this.OnDaiMaChanging(value);
					this.SendPropertyChanging();
					this._DaiMa = value;
					this.SendPropertyChanged("DaiMa");
					this.OnDaiMaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MingCheng", DbType="VarChar(20)")]
		public string MingCheng
		{
			get
			{
				return this._MingCheng;
			}
			set
			{
				if ((this._MingCheng != value))
				{
					this.OnMingChengChanging(value);
					this.SendPropertyChanging();
					this._MingCheng = value;
					this.SendPropertyChanged("MingCheng");
					this.OnMingChengChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.C_EARLY_WARNING")]
	public partial class C_EARLY_WARNING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _C_ID;
		
		private System.Nullable<int> _USER_ID;
		
		private string _ALIAS;
		
		private System.Nullable<int> _PERIOD;
		
		private System.Nullable<System.DateTime> _C_DATE;
		
		private System.Nullable<int> _C_TYPE;
		
		private string _dbsource;
		
		private string _BEIZHU;
		
		private System.Nullable<int> _Status;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_IDChanging(int value);
    partial void OnC_IDChanged();
    partial void OnUSER_IDChanging(System.Nullable<int> value);
    partial void OnUSER_IDChanged();
    partial void OnALIASChanging(string value);
    partial void OnALIASChanged();
    partial void OnPERIODChanging(System.Nullable<int> value);
    partial void OnPERIODChanged();
    partial void OnC_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnC_DATEChanged();
    partial void OnC_TYPEChanging(System.Nullable<int> value);
    partial void OnC_TYPEChanged();
    partial void OndbsourceChanging(string value);
    partial void OndbsourceChanged();
    partial void OnBEIZHUChanging(string value);
    partial void OnBEIZHUChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    #endregion
		
		public C_EARLY_WARNING()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int C_ID
		{
			get
			{
				return this._C_ID;
			}
			set
			{
				if ((this._C_ID != value))
				{
					this.OnC_IDChanging(value);
					this.SendPropertyChanging();
					this._C_ID = value;
					this.SendPropertyChanged("C_ID");
					this.OnC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int")]
		public System.Nullable<int> USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ALIAS", DbType="NVarChar(200)")]
		public string ALIAS
		{
			get
			{
				return this._ALIAS;
			}
			set
			{
				if ((this._ALIAS != value))
				{
					this.OnALIASChanging(value);
					this.SendPropertyChanging();
					this._ALIAS = value;
					this.SendPropertyChanged("ALIAS");
					this.OnALIASChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERIOD", DbType="Int")]
		public System.Nullable<int> PERIOD
		{
			get
			{
				return this._PERIOD;
			}
			set
			{
				if ((this._PERIOD != value))
				{
					this.OnPERIODChanging(value);
					this.SendPropertyChanging();
					this._PERIOD = value;
					this.SendPropertyChanged("PERIOD");
					this.OnPERIODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> C_DATE
		{
			get
			{
				return this._C_DATE;
			}
			set
			{
				if ((this._C_DATE != value))
				{
					this.OnC_DATEChanging(value);
					this.SendPropertyChanging();
					this._C_DATE = value;
					this.SendPropertyChanged("C_DATE");
					this.OnC_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_TYPE", DbType="Int")]
		public System.Nullable<int> C_TYPE
		{
			get
			{
				return this._C_TYPE;
			}
			set
			{
				if ((this._C_TYPE != value))
				{
					this.OnC_TYPEChanging(value);
					this.SendPropertyChanging();
					this._C_TYPE = value;
					this.SendPropertyChanged("C_TYPE");
					this.OnC_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dbsource", DbType="NChar(10)")]
		public string dbsource
		{
			get
			{
				return this._dbsource;
			}
			set
			{
				if ((this._dbsource != value))
				{
					this.OndbsourceChanging(value);
					this.SendPropertyChanging();
					this._dbsource = value;
					this.SendPropertyChanged("dbsource");
					this.OndbsourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BEIZHU", DbType="VarChar(1000)")]
		public string BEIZHU
		{
			get
			{
				return this._BEIZHU;
			}
			set
			{
				if ((this._BEIZHU != value))
				{
					this.OnBEIZHUChanging(value);
					this.SendPropertyChanging();
					this._BEIZHU = value;
					this.SendPropertyChanged("BEIZHU");
					this.OnBEIZHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.C_W_SECARCH")]
	public partial class C_W_SECARCH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _W_ID;
		
		private System.Nullable<int> _C_ID;
		
		private string _S_NAME;
		
		private string _PATTERN;
		
		private System.Nullable<System.DateTime> _CHANGEDATE;
		
		private System.Nullable<int> _CURRENTNUM;
		
		private System.Nullable<int> _CHANGENUM;
		
		private System.Nullable<int> _TYPE;
		
		private System.Data.Linq.Binary _SEARCHFILE;
		
		private System.Data.Linq.Binary _COMPAREFILE;
		
		private string _NID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnW_IDChanging(int value);
    partial void OnW_IDChanged();
    partial void OnC_IDChanging(System.Nullable<int> value);
    partial void OnC_IDChanged();
    partial void OnS_NAMEChanging(string value);
    partial void OnS_NAMEChanged();
    partial void OnPATTERNChanging(string value);
    partial void OnPATTERNChanged();
    partial void OnCHANGEDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCHANGEDATEChanged();
    partial void OnCURRENTNUMChanging(System.Nullable<int> value);
    partial void OnCURRENTNUMChanged();
    partial void OnCHANGENUMChanging(System.Nullable<int> value);
    partial void OnCHANGENUMChanged();
    partial void OnTYPEChanging(System.Nullable<int> value);
    partial void OnTYPEChanged();
    partial void OnSEARCHFILEChanging(System.Data.Linq.Binary value);
    partial void OnSEARCHFILEChanged();
    partial void OnCOMPAREFILEChanging(System.Data.Linq.Binary value);
    partial void OnCOMPAREFILEChanged();
    partial void OnNIDChanging(string value);
    partial void OnNIDChanged();
    #endregion
		
		public C_W_SECARCH()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_W_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int W_ID
		{
			get
			{
				return this._W_ID;
			}
			set
			{
				if ((this._W_ID != value))
				{
					this.OnW_IDChanging(value);
					this.SendPropertyChanging();
					this._W_ID = value;
					this.SendPropertyChanged("W_ID");
					this.OnW_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_ID", DbType="Int")]
		public System.Nullable<int> C_ID
		{
			get
			{
				return this._C_ID;
			}
			set
			{
				if ((this._C_ID != value))
				{
					this.OnC_IDChanging(value);
					this.SendPropertyChanging();
					this._C_ID = value;
					this.SendPropertyChanged("C_ID");
					this.OnC_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_NAME", DbType="VarChar(200)")]
		public string S_NAME
		{
			get
			{
				return this._S_NAME;
			}
			set
			{
				if ((this._S_NAME != value))
				{
					this.OnS_NAMEChanging(value);
					this.SendPropertyChanging();
					this._S_NAME = value;
					this.SendPropertyChanged("S_NAME");
					this.OnS_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PATTERN", DbType="VarChar(1000)")]
		public string PATTERN
		{
			get
			{
				return this._PATTERN;
			}
			set
			{
				if ((this._PATTERN != value))
				{
					this.OnPATTERNChanging(value);
					this.SendPropertyChanging();
					this._PATTERN = value;
					this.SendPropertyChanged("PATTERN");
					this.OnPATTERNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHANGEDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> CHANGEDATE
		{
			get
			{
				return this._CHANGEDATE;
			}
			set
			{
				if ((this._CHANGEDATE != value))
				{
					this.OnCHANGEDATEChanging(value);
					this.SendPropertyChanging();
					this._CHANGEDATE = value;
					this.SendPropertyChanged("CHANGEDATE");
					this.OnCHANGEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURRENTNUM", DbType="Int")]
		public System.Nullable<int> CURRENTNUM
		{
			get
			{
				return this._CURRENTNUM;
			}
			set
			{
				if ((this._CURRENTNUM != value))
				{
					this.OnCURRENTNUMChanging(value);
					this.SendPropertyChanging();
					this._CURRENTNUM = value;
					this.SendPropertyChanged("CURRENTNUM");
					this.OnCURRENTNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHANGENUM", DbType="Int")]
		public System.Nullable<int> CHANGENUM
		{
			get
			{
				return this._CHANGENUM;
			}
			set
			{
				if ((this._CHANGENUM != value))
				{
					this.OnCHANGENUMChanging(value);
					this.SendPropertyChanging();
					this._CHANGENUM = value;
					this.SendPropertyChanged("CHANGENUM");
					this.OnCHANGENUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE", DbType="Int")]
		public System.Nullable<int> TYPE
		{
			get
			{
				return this._TYPE;
			}
			set
			{
				if ((this._TYPE != value))
				{
					this.OnTYPEChanging(value);
					this.SendPropertyChanging();
					this._TYPE = value;
					this.SendPropertyChanged("TYPE");
					this.OnTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEARCHFILE", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary SEARCHFILE
		{
			get
			{
				return this._SEARCHFILE;
			}
			set
			{
				if ((this._SEARCHFILE != value))
				{
					this.OnSEARCHFILEChanging(value);
					this.SendPropertyChanging();
					this._SEARCHFILE = value;
					this.SendPropertyChanged("SEARCHFILE");
					this.OnSEARCHFILEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPAREFILE", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary COMPAREFILE
		{
			get
			{
				return this._COMPAREFILE;
			}
			set
			{
				if ((this._COMPAREFILE != value))
				{
					this.OnCOMPAREFILEChanging(value);
					this.SendPropertyChanging();
					this._COMPAREFILE = value;
					this.SendPropertyChanged("COMPAREFILE");
					this.OnCOMPAREFILEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NID", DbType="VarChar(36)")]
		public string NID
		{
			get
			{
				return this._NID;
			}
			set
			{
				if ((this._NID != value))
				{
					this.OnNIDChanging(value);
					this.SendPropertyChanging();
					this._NID = value;
					this.SendPropertyChanged("NID");
					this.OnNIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
